{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;;AAIA;AAAA;AAAA;AAAA;AAkCA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;AChHA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACfA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-app-preact/._src_app.js","webpack://my-app-preact/./src/app.js?0473","webpack://my-app-preact/._src_utils_common.js","webpack://my-app-preact/._src_utils_global.js","webpack://my-app-preact/._src_utils_index.js","webpack://my-app-preact/._node_modules_@babel_runtime_helpers_esm_defineProperty.js"],"sourcesContent":["import { Component } from 'react'\nimport { setGlobalData } from '@/utils'\nimport '@/assets/css/index.scss'\n\nimport './app.scss'\n\nclass App extends Component {\n\tcomponentWillMount() {\n\t\tthis.updateVersion()\n\n\t\tconst systemInfo = Taro.getSystemInfoSync()\n\t\tconst { safeArea, screenHeight } = systemInfo || {}\n\t\tconst { bottom } = safeArea || {}\n\t\tif (screenHeight - bottom === 34) {\n\t\t\tsetGlobalData('isIphoneX', true)\n\t\t}\n\t}\n\tcomponentDidMount() {}\n\n\tcomponentDidShow() {}\n\n\tcomponentDidHide() {}\n\n\t// 线上版本更新\n\tupdateVersion = () => {\n\t\tif (wx.canIUse('getUpdateManager')) {\n\t\t\t// 创建 UpdateManager 实例\n\t\t\tconst updateManager = wx.getUpdateManager()\n\n\t\t\t// 检测版本是否有更新\n\t\t\tupdateManager.onCheckForUpdate(function (res) {\n\t\t\t\t// 请求完新版本信息的回调\n\t\t\t\tif (res.hasUpdate) {\n\t\t\t\t\t// 监听小程序有版本更新事件\n\t\t\t\t\tupdateManager.onUpdateReady(function () {\n\t\t\t\t\t\t// 新的版本已经下载好，调用 applyUpdate 应用新版本并重启 （此处进行了自动更新操作，无需用户手动确认）\n\t\t\t\t\t\tupdateManager.applyUpdate()\n\t\t\t\t\t})\n\n\t\t\t\t\tupdateManager.onUpdateFailed(function () {\n\t\t\t\t\t\t// 新版本下载失败\n\t\t\t\t\t\twx.showModal({\n\t\t\t\t\t\t\ttitle: '检测到新版本',\n\t\t\t\t\t\t\tcontent: '请您删除当前小程序，到微信 “发现-小程序” 页，重新搜索打开哦~'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\twx.showModal({\n\t\t\t\ttitle: '溫馨提示',\n\t\t\t\tcontent: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'\n\t\t\t})\n\t\t}\n\t}\n\n\trender() {\n\t\treturn this.props.children\n\t}\n}\n\nexport default App\n","import '@tarojs/plugin-platform-weapp/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createReactApp } from '@tarojs/plugin-framework-react/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\n\nimport component from \"../node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./app.js\"\n\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nvar config = {\"pages\":[\"pages/index/index\"],\"subPackages\":[],\"plugins\":[],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"WeChat\",\"navigationBarTextStyle\":\"black\"}};\nwindow.__taroAppConfig = config\nvar inst = App(createReactApp(component, React, ReactDOM, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"640\":1.17,\"750\":1,\"828\":0.905}\n})\n","import Taro from '@tarojs/taro'\n\n// 重刷当前页面\nexport const reloadCurrentPage = () => {\n\tlet pages = Taro.getCurrentPages()\n\tlet currentPage = pages[pages.length - 1]\n\tcurrentPage.onLoad(currentPage.options)\n}\n\n// 重刷前一个页面\nexport const reloadPreviousPage = () => {\n\tlet pages = Taro.getCurrentPages()\n\tlet previousPage = pages[pages.length - 2]\n\tpreviousPage.onLoad(previousPage.options)\n}\n\n// 获取当前页面url参数对象\nexport const getParams = () => {\n\tconst params = Taro.getCurrentInstance().router.params || {}\n\tfor (let key in params) {\n\t\tif (key == '$taroTimestamp') delete params[key]\n\t}\n\treturn params\n}\n\n// 获取当前页面url\nexport const getCurrentPageUrl = () => {\n\tlet currentPage = ''\n\tlet paramsStr = ''\n\tlet pages = Taro.getCurrentPages()\n\tif (pages.length) currentPage = pages[pages.length - 1]\n\treturn currentPage.route\n}\n\n// 拼接 【当前页面url+参数】 作为backUrl\nexport const packBackUrl = _params => {\n\tconst url = getCurrentPageUrl()\n\tconst params = _params || getParams() || {}\n\tlet paramsStr = ''\n\tfor (let key in params) {\n\t\tparamsStr = paramsStr + key + '=' + params[key] + '&'\n\t}\n\treturn `backUrl=${url}&${paramsStr}`\n}\n\n/**\n * 组装地址：解析url参数中的backUrl，作为接下来要跳转的页面地址，并且携带url中的其他参数\n * @param {*} defaultUrl\n * @returns\n */\nexport const parseBackUrl = defaultUrl => {\n\tlet params = getParams() || {}\n\tif (!params.backUrl) return defaultUrl\n\n\tlet paramsStr = ''\n\tfor (let key in params) {\n\t\tkey !== 'backUrl' && (paramsStr = paramsStr + key + '=' + params[key] + '&')\n\t}\n\treturn `/${params.backUrl}?${paramsStr}`\n}\n\n// 复制文字\nexport const copyText = text => {\n\ttext &&\n\t\twx.setClipboardData({\n\t\t\tdata: text\n\t\t})\n}\n\n// 处理时间戳-xxxx-yy-dd\nexport const getData = (_time = +new Date()) => {\n\tlet date = new Date(_time + 8 * 3600 * 1000)\n\treturn date.toJSON().substr(0, 19).replace('T', ' ').split(' ')[0]\n}\n\n// 判断日期是否是今天\nexport const isToday = data => {\n\tconst date = new Date(data || null)\n\tconst current = new Date()\n\n\tif (current.getFullYear() == date.getFullYear() && current.getMonth() == date.getMonth() && current.getDate() == date.getDate()) {\n\t\treturn true\n\t}\n\n\treturn false\n}\n\n// 微信版本号比较\nexport const compareVersion = (v1, v2) => {\n\tv1 = v1.split('.')\n\tv2 = v2.split('.')\n\tconst len = Math.max(v1.length, v2.length)\n\n\twhile (v1.length < len) {\n\t\tv1.push('0')\n\t}\n\twhile (v2.length < len) {\n\t\tv2.push('0')\n\t}\n\n\tfor (let i = 0; i < len; i++) {\n\t\tconst num1 = parseInt(v1[i])\n\t\tconst num2 = parseInt(v2[i])\n\n\t\tif (num1 > num2) {\n\t\t\treturn 1\n\t\t} else if (num1 < num2) {\n\t\t\treturn -1\n\t\t}\n\t}\n\n\treturn 0\n}\n","import Taro from '@tarojs/taro'\n\n// 全局变量\nconst globalData = {\n\tisIphoneX: false,\n\tlist: [],\n}\n\nexport function setGlobalData(key, val) {\n\tglobalData[key] = val\n\tif (key === 'list') Taro.eventCenter.trigger('CHANGE_GLOBAL_LIST')\n}\n\nexport function getGlobalData(key) {\n\treturn globalData[key]\n}\n","export * from './common'\nexport * from './global'\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}"],"names":[],"sourceRoot":""}